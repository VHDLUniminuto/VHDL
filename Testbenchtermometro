LIBRARY ieee;
USE ieee.std_logic_1164.ALL;
 
-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--USE ieee.numeric_std.ALL;
 
ENTITY test IS
END test;
 
ARCHITECTURE behavior OF test IS 
 
    -- Component Declaration for the Unit Under Test (UUT)
 
    COMPONENT Termometer
    PORT(
         Display : OUT  std_logic_vector(6 downto 0);
         Enable : OUT  std_logic_vector(3 downto 0);
         ValTemperatura : IN  std_logic_vector(7 downto 0);
         clk : IN  std_logic;
         Reset : IN  std_logic;
         clkAD : OUT  std_logic;
         AlarmaPin : OUT  std_logic;
         Alarma : OUT  std_logic
        );
    END COMPONENT;
    

   --Inputs
   signal ValTemperatura : std_logic_vector(7 downto 0) := (others => '0');
   signal clk : std_logic := '0';
   signal Reset : std_logic := '0';

 	--Outputs
   signal Display : std_logic_vector(6 downto 0);
   signal Enable : std_logic_vector(3 downto 0);
   signal clkAD : std_logic;
   signal AlarmaPin : std_logic;
   signal Alarma : std_logic;

   -- Clock period definitions
   constant clk_period : time := 10 ns;
   constant clkAD_period : time := 10 ns;
 
BEGIN
 
	-- Instantiate the Unit Under Test (UUT)
   uut: Termometer PORT MAP (
          Display => Display,
          Enable => Enable,
          ValTemperatura => ValTemperatura,
          clk => clk,
          Reset => Reset,
          clkAD => clkAD,
          AlarmaPin => AlarmaPin,
          Alarma => Alarma
        );

   -- Clock process definitions
   clk_process :process
   begin
		clk <= '0';
		wait for clk_period/2;
		clk <= '1';
		wait for clk_period/2;
   end process;
 
   clkAD_process :process
   begin
		clkAD <= '0';
		wait for clkAD_period/2;
		clkAD <= '1';
		wait for clkAD_period/2;
   end process;
 

   -- Stimulus process
   stim_proc: process
   begin		
      -- hold reset state for 100 ns.
      wait for 100 ns;	

      wait for clk_period*10;
		ValTemperatura<="00011010";
		wait for clk_period*1000;

      -- insert stimulus here 

      wait;
   end process;

END;
